#ifndef _CREATUREENUMS_H_
#define _CREATUREENUMS_H_

#include	<LHLib/LHTypes.h>


enum CREATURE_MIMIC_TYPE
{
	CREATURE_MIMIC_TYPE_VILLAGER_MAN,
	CREATURE_MIMIC_TYPE_VILLAGER_WOMAN,
	CREATURE_MIMIC_TYPE_VILLAGER_CHILD,
	CREATURE_MIMIC_TYPE_ANIMAL_NICE,
	CREATURE_MIMIC_TYPE_ANIMAL_NASTY,
	CREATURE_MIMIC_TYPE_ABODE,
	CREATURE_MIMIC_TYPE_TREE,
	CREATURE_MIMIC_TYPE_ROCK,
	CREATURE_MIMIC_TYPE_INANIMATE_OBJECT,
	CREATURE_MIMIC_TYPE_CREATURE,
	CREATURE_MIMIC_TYPE_DEFAULT,
};
 
//------------------------------------------------------------------------------------------------------------------------
enum WHAT_DETERMINES_ACTION 
{
	ACTIVITY_OBJECT_DETERMINES_ACTION,
	OBJECT_TO_ACT_ON_DETERMINES_ACTION
};

//------------------------------------------------------------------------------------------------------------------------
enum ATTRIBUTE_APPLIES_TEST
{
	ATTRIBUTE_APPLIES_TRUE,
	ATTRIBUTE_APPLIES_FALSE,
	ATTRIBUTE_DOESNT_APPLY
};

//------------------------------------------------------------------------------------------------------------------------
enum CREATURE_DECISION
{
	CREATURE_HAS_AGREED_TO_REQUEST,
	CREATURE_HAS_REFUSED_REQUEST,
	CREATURE_HAS_ALREADY_INITIATED_REQUEST,
	CREATURE_HAS_NOT_DECIDED_YET
};

//------------------------------------------------------------------------------------------------------------------------
enum CREATURE_BELIEF_TYPE 
{
	CREATURE_BELIEF_TYPE_TOWN=0,
	CREATURE_BELIEF_TYPE_FIRST=0,
	CREATURE_BELIEF_TYPE_FOREST,
    CREATURE_BELIEF_TYPE_CITADEL,
    CREATURE_BELIEF_TYPE_ABODE,
	CREATURE_BELIEF_TYPE_CITADEL_PART,
    CREATURE_BELIEF_TYPE_TREE,
    CREATURE_BELIEF_TYPE_VILLAGER,
    CREATURE_BELIEF_TYPE_ANIMAL,
    CREATURE_BELIEF_TYPE_CREATURE,
	CREATURE_BELIEF_TYPE_MAGIC_LIVING,
	CREATURE_BELIEF_TYPE_SPELL,
	CREATURE_BELIEF_TYPE_FIELD,
	CREATURE_BELIEF_TYPE_ROCK,
	CREATURE_BELIEF_TYPE_LUMP_OF_POO,
	CREATURE_BELIEF_TYPE_FOOD,
	CREATURE_BELIEF_TYPE_FEATURE,
	CREATURE_BELIEF_TYPE_POT,
	CREATURE_BELIEF_TYPE_SPELL_ICON,
	CREATURE_BELIEF_TYPE_SPELL_SEED,
	CREATURE_BELIEF_TYPE_MOBILE_OBJECT,
	CREATURE_BELIEF_TYPE_CONTEXT,
	CREATURE_BELIEF_TYPE_SMALL,
	CREATURE_BELIEF_TYPE_FLOCK,
	CREATURE_BELIEF_TYPE_TOTEM,
	//CREATURE_BELIEF_TYPE_FORCE,
	CREATURE_BELIEF_TYPE_PLATOON,
	CREATURE_BELIEF_TYPE_WALL,
	CREATURE_BELIEF_TYPE_WALL_SEGMENT,
	CREATURE_BELIEF_TYPE_MISSILE_GROUP,
	

	CREATURE_BELIEF_TYPE_LAST,
	CREATURE_BELIEF_TYPE_NONE=CREATURE_BELIEF_TYPE_LAST,
};

//------------------------------------------------------------------------------------------------------------------------
enum LESSON_ORIGIN_TYPE
{
	LESSON_ORIGIN_TYPE_DIRECT_PLAYER_FEEDBACK,
	LESSON_ORIGIN_TYPE_FEEDBACK_FROM_EATING,
	LESSON_ORIGIN_TYPE_INDIRECT_FEEDBACK_FROM_PLAYER_WATCHING,
	LESSON_ORIGIN_TYPE_LAST
};

//*****************************************************************************
//	Miscellaneous Mental Constants
//*****************************************************************************
enum CREATURE_MENTAL_CONSTANTS
{
	MAX_NUM_SUB_ACTIONS_IN_ACTION=32,
	MAX_NUM_PREVIOUS_CONTEXTS=5,
	MAX_NUM_PREVIOUS_ACTION_CONTEXTS=10,
	NUM_OLD_DESIRES_TO_REMEMBER=30,
	NUM_GAME_TURNS_BETWEEN_STORING_CREATURE_DESIRES=4,
	FEEDBACK_SPECIFIED_IN_CODE=9999,
	NUM_OLD_LEASH_FORCES_TO_REMEMBER=40,
	MAX_NUM_TREES_TO_REMEMBER=10,
};

//------------------------------------------------------------------------------------------------------------------------
enum WHETHER_WE_INSIST_THAT_ACTION_USES_OBJECT_TO_ACT_ON
{
	DONT_INSIST_THAT_ACTION_USES_OBJECT_TO_ACT_ON,
	DO_INSIST_THAT_ACTION_USES_OBJECT_TO_ACT_ON,
};

//------------------------------------------------------------------------------------------------------------------------
enum CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE
{
	CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE_ALIGNMENT,
	CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE_FATNESS,
	CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE_STRENGTH,
	CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE_SIZE,
	CREATURE_SCRIPT_TRANSITIONAL_ATTRIBUTE_TYPE_LAST
};

//------------------------------------------------------------------------------------------------------------------------
enum CREATURE_PHYSICAL_INTERACTION_TYPE
{
	CREATURE_PHYSICAL_INTERACTION_NONE,
	CREATURE_PHYSICAL_INTERACTION_OBJECT,
	CREATURE_PHYSICAL_INTERACTION_SLAP,
	CREATURE_PHYSICAL_INTERACTION_MEGA_PUNCH,
	CREATURE_PHYSICAL_INTERACTION_TICKLE
};

#endif 
